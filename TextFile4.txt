@model GetCategoriesDto


@{
    int index = 0;
    index = Model.PageSize * (Model.PageIndex - 1);
}


<div class="overFormContainer">

    <form method="post" asp-action="Index" asp-controller="Categories" class="formContainer">
        <input type="hidden" asp-for="PageIndex" value="@Model.PageIndex" />



        <div class="topContainer">
            <div class="df-sb">
                <div class="w-200px centery">
                    <a asp-action="Create" asp-controller="Categories" class="buttonCreate">+ Dodaj nową pozycję</a>
                </div>


                <div class="df-sb mt-20 mb-20">
                    <!-- Wyszukiwarka -->
                    <div class="df">
                        <input asp-for="q" class="searchInput" id="searchInput" />
                        <input type="submit" value="Szukaj" class="searchButton" />
                    </div>

                    <!-- Sortowanie -->
                    <div class="df">
                        <select asp-for="SortowanieOption" asp-items='@Model.SortowanieOptionItems' class="selectOption" id="sortowanieOptionSelectList"></select>
                        <input type="submit" value="Sortuj" class="searchButton" />
                    </div>
                </div>

            </div>
        </div>


        <div class="tableContainer">


            @if (Model.Categories != null && Model.Categories.Any())
            {
                if (!string.IsNullOrEmpty(Model.q))
                {
                    <h3>Wyniki wyszukiwania dla: @Model.q</h3>
                    <div class="df">
                        <span>Ilość znalezionych wyników</span>
                        <h3>@Model.Categories.Count</h3>
                    </div>
                }



                <table>
                    <thead>
                        <tr>
                            <th>Lp</th>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbodyElements">
                        @foreach (var category in Model.Paginator)
                        {
                            index++;

                            <tr>
                                <td class="w-40px">@index</td>



                                <td style="min-width: 300px;">
                                    @category.Name
                                </td>



                                <td class="w-50px">
                                    <div class="db">
                                        <a asp-action="Edit"
                                           asp-controller="Categories"
                                           asp-route-categoryId="@category.CategoryId"
                                           class="deleteButton">
                                            Edytuj
                                        </a>

                                        @if (category.Movies != null && !category.Movies.Any())
                                        {
                                            <a asp-action="Delete"
                                               asp-controller="Categories"
                                               asp-route-id="@category.CategoryId"
                                               class="deleteButton">
                                                Usuń
                                            </a>
                                        }
                                    </div>
                                </td>

                            </tr>
                        }

                    </tbody>
                </table>











                <!-- Paginator -->
                @* if (Model.Paginator.Count > 4)
            { *@



                bool hasPrevious = Model.Paginator.HasPreviousPage;
                bool hasNext = Model.Paginator.HasNexPage;


                <div class="df mt-30 pb-30">
                    <div class="w-40 centery">

                        <div class="df centery">
                            <p>Pokaż</p>
                            <select asp-for="PageSize" asp-items='@Model.SelectListNumberItems' class="selectOption" id="pageSizeSelectList"></select>
                            <input type="submit" value="Wybierz" class="selectOptionButton" />
                        </div>

                    </div>




                    <div class="w-60 centery">
                        <div class="w-100 centery">
                            <div class="df fs-11 centery">


                                @if (hasPrevious)
                                {
                                    <a asp-action="Index"
                                       asp-controller="Categories"
                                       asp-route-PageSize="@Model.PageSize"
                                       asp-route-PageIndex="@(Model.Paginator.PageIndex - 1)"
                                       asp-route-q="@Model.q"
                                       asp-route-SortowanieOption="@Model.SortowanieOption"
                                       class="paginatorButton"
                                       id="buttonPrev">
                                        Prev
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="Index"
                                       asp-controller="Categories"
                                       class="paginatorButton disable-link"
                                       id="buttonPrev">
                                        Prev
                                    </a>
                                }


                                <div id="linksContainer" class="df ml-10 mr-10">
                                    @{



                                        // for (var i = Model.Start; i < Model.End; i++)
                                        // {
                                        //     if (i <= Model.Paginator.TotalPage)
                                        //     {
                                        //                 <a asp-action="Index"
                                        //                    asp-controller="Categories"
                                        //                    class="paginator-item"
                                        //                    id="button">
                                        //                     @i
                                        //                 </a>
                                        //     }
                                        // }

                                    }
                                </div>


                                @if (hasNext)
                                {
                                    @* <a asp-action="Index"
                            asp-controller="Categories"
                            asp-route-PageSize="@Model.PageSize"
                            asp-route-PageIndex="@(Model.Paginator.PageIndex + 1)"
                            asp-route-q="@Model.q"
                            asp-route-SortowanieOption="@Model.SortowanieOption"
                            class="paginatorButton"
                            id="buttonNext">
                            Next
                            </a> *@
                                    <a class="paginatorButton"
                                       id="buttonNext">
                                        Next
                                    </a>
                                }
                                else
                                {
                                    @* <a asp-action="Index"
                            asp-controller="Categories"
                            class="paginatorButton disable-link"
                            id="buttonNext">
                            Next
                            </a> *@

                                    <a class="paginatorButton disable-link"
                                       id="buttonNext">
                                        Next
                                    </a>
                                }


                            </div>
                        </div>
                    </div>
                </div>



            }
            else
            {
                if (!string.IsNullOrEmpty(Model.q))
                {
                    <p>Nie znaleziono kategorii pasujących do Twojego zapytania: <strong>@Model.q</strong>.</p>
                }
                else
                {
                    <p>Brak kategorii w bazie danych.</p>
                }
            }

        </div>



    </form>
</div>






@section Scripts {

    <script type="text/javascript">

        let queryValue = '';
        let pageIndex = 1;
        let start = 0;
        let end = 0;
        let srodek = 0;


        // SortowanieOption
        // pobieranie zaznaczonego elementu z listy SortowanieOptions i przekazywanie go do zmiennej, która jest przekazywana do atrybutu przycisku
        let sortowanieOptionSelectList = document.getElementById('sortowanieOptionSelectList');
        let sortowanieOptionSelectListValue = sortowanieOptionSelectList.value;
        sortowanieOptionSelectList.addEventListener('change', function () {
            sortowanieOptionSelectListValue = this.value;
        });

        // PageSize
        // pobieranie zaznaczonego elementu z listy SortowanieOptions i przekazywanie go do zmiennej, która jest przekazywana do atrybutu przycisku
        let pageSizeSelectList = document.getElementById('pageSizeSelectList');
        let pageSize = pageSizeSelectList.value; // może mieć 5, 10, 15 lub 20
        srodek = pageSize / 2;
        end = pageSize + 1;
        if (pageIndex > srodek) {
            start = pageIndex - (srodek-1);
            end = pageIndex + pageSize - srodek;
        }
        pageSizeSelectList.addEventListener('change', function () {
            pageSize = parseInt (this.value);
        });


        let ileLinkowDoWyswietlenia = 0;


        let linksContainer = document.getElementById('linksContainer');
        function generateLink(container, i) {

            let link = document.createElement('a');
            link.style.padding = '5px';
            link.style.border = '1px solid rgb(220,220,220)';
            link.innerText = (i + 1).toString();
            link.setAttribute('asp-action', 'Index');
            link.setAttribute('asp-controller', 'Categories');

            // Listener dla kliknięcia
            link.addEventListener('click', function (event) {
                event.preventDefault();

                pageIndex = i + 1;

                this.setAttribute('asp-route-PageSize', pageSize);
                this.setAttribute('asp-route-PageIndex', pageIndex);
                this.setAttribute('asp-route-q', queryValue);
                this.setAttribute('asp-route-SortowanieOption', sortowanieOptionSelectListValue);
                let linkUrl = `/${this.getAttribute('asp-controller')}/${this.getAttribute('asp-action')}?PageSize=${this.getAttribute('asp-route-PageSize')}&PageIndex=${this.getAttribute('asp-route-PageIndex')}&q=${encodeURIComponent(queryValue)}&SortowanieOption=${this.getAttribute('asp-route-SortowanieOption')}`;
                window.location.href = linkUrl;
            });

            container.appendChild(link);
        }

        function generateLinks(container) {
            alert(end);
            for (let i = start; i < 11; i++) {
                generateLink(container, i);
            }
        }
        generateLinks(linksContainer);




        let buttonNext = document.getElementById('buttonNext');
        // tutaj pilnujemy aby pageIndex wartość dodatnią, wtedy można przejść do poprzedniej podstrony
        //if (pageIndex <= ) {
        buttonNext.addEventListener('click', function (event) {
            event.preventDefault();
            queryValue = searchInput.value;


            // pobranie zmiennejPageIndex z sessionStorage
            pageIndex = parseInt(sessionStorage.getItem('pageIndex')) || pageIndex;

            pageIndex = pageIndex + 1;


            // osadzenie zmiennej pageIndex w sessionStorage
            sessionStorage.setItem('pageIndex', pageIndex);


            this.setAttribute('asp-action', 'Index');
            this.setAttribute('asp-controller', 'Categories');
            this.setAttribute('asp-route-PageSize', pageSize);
            this.setAttribute('asp-route-PageIndex', pageIndex);
            this.setAttribute('asp-route-q', queryValue);
            this.setAttribute('asp-route-SortowanieOption', sortowanieOptionSelectListValue);
            let linkUrl = `/${this.getAttribute('asp-controller')}/${this.getAttribute('asp-action')}?PageSize=${this.getAttribute('asp-route-PageSize')}&PageIndex=${this.getAttribute('asp-route-PageIndex')}&q=${encodeURIComponent(queryValue)}&SortowanieOption=${this.getAttribute('asp-route-SortowanieOption')}`;

            //let linkUrl = `${this.getAttribute('href')}?PageSize=${this.getAttribute('asp-route-PageSize')}&PageIndex=${this.getAttribute('asp-route-PageIndex')}&q=${encodeURIComponent(queryValue)}&SortowanieOption=${this.getAttribute('asp-route-SortowanieOption')}`;
            window.location.href = linkUrl;
        });
        //}



        // NEW-----------------------------------------------------------------------------------------



        let searchInput = document.getElementById('searchInput');
        let tbodyElements = document.getElementById('tbodyElements').children; // pobiera ilość elementów tr znajdujących się w tbody w tabeli
        let iloscElementowTr = tbodyElements.children.length;
        alert(tbodyElements.length);



        // function setNecessaryAttributesAndReturnUrl(object) {
        //     this.setAttribute('asp-action', 'Index');
        //     this.setAttribute('asp-controller', 'Categories');
        //     this.setAttribute('asp-route-PageSize', pageSize);
        //     this.setAttribute('asp-route-PageIndex', pageIndex);
        //     this.setAttribute('asp-route-q', queryValue);
        //     this.setAttribute('asp-route-SortowanieOption', sortowanieOptionSelectListValue);
        //     let linkUrl = `/${this.getAttribute('Categories')}/${this.getAttribute('Index')}?PageSize=${this.getAttribute('asp-route-PageSize')}&PageIndex=${this.getAttribute('asp-route-PageIndex')}&q=${encodeURIComponent(queryValue)}&SortowanieOption=${this.getAttribute('asp-route-SortowanieOption')}`;
        //     return linkUrl;
        // }


        //alert('A');


    </script>


}

