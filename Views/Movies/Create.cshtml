@model CreateMovieDto

<div class="dodawanieHeader">
    <span class="titleHeader">Dodawanie nowej pozycji</span>
</div>
<hr />

<form method="post" asp-action="Create" asp-controller="Movies" enctype="multipart/form-data">

    <table>
        <tr>
            <td class="leftColumn">
                <label asp-for="Title"></label>
            </td>
            <td class="rightColumn">
                <div class="db">
                    <input asp-for="Title" />
                    <span asp-validation-for="Title" class="c-red"></span>
                </div>
            </td>
        </tr>
        <tr>
            <td class="leftColumn">
                <label asp-for="Description"></label>
            </td>
            <td class="rightColumn">
                <div class="db">
                    <textarea asp-for="Description" class="textArea"></textarea>
                    <span asp-validation-for="Description" class="c-red"></span>
                </div>
            </td>
        </tr>
        <tr>
            <td class="leftColumn">
                <label asp-for="Photo"></label>
            </td>
            <td class="rightColumn">
                <div class="db">
                    <div id="imageContainer" class="image">
                        <img id="imagePreview" alt="Uploaded Photo" style="display: none;" />
                    </div>
                    <input asp-for="PhotoData" id="fileInput" accept="image/*" onchange="previewImage(event); saveFiles();" style="border: none; background-color: rgb(250,250,250);" />
                </div>
            </td>
        </tr>
        <tr>
            <td class="leftColumn">
                <label asp-for="Price"></label>
            </td>
            <td class="rightColumn">
                <div class="db">
                    <input asp-for="Price" />
                    <span asp-validation-for="Price" class="c-red"></span>
                </div>
            </td>
        </tr>
        <tr>
            <td class="leftColumn">
                <label asp-for="CategoryId">Kategoria</label>
            </td>
            <td class="rightColumn">
                <div class="db">
                    <select asp-for="CategoryId" asp-items="Model.CategoriesList" class="w-200px form-input2"></select>
                    <span asp-validation-for="CategoryId" class="c-red"></span>
                </div>
            </td>
        </tr>
    </table> 
     

    <div class="w-100 df-sb mt-30 mb-40"> 
        <a asp-action="Index" asp-controller="Movies" class="buttonWstecz w-100px">Wstecz</a>
        <div class="df">
            <input type="submit" value="Zapisz" class="buttonEdit w-100px" onclick="clearSession();" />
            <a asp-action="Index" asp-controller="Movies" class="buttonAnuluj w-100px ml-2">Anuluj</a>
        </div>
    </div>
</form>


<!-- Zwraca komunikat błędu, o ile takowy się pojawi -->
<span class="c-red">@ViewData["ErrorMessage"]</span>







@section Scripts {

    @*Skrypt pozwalający zapamiętać wybrane zdjęcia po przeładowaniu strony*@
    <script>
        var filesInput = document.getElementById('fileInput');
        var imagePreview = document.getElementById('imagePreview');

        // Funkcja do zapisywania przesłanych plików w sessionStorage
        function saveFiles() {
            var files = filesInput.files;

            if (files.length > 0) {
                var filesArray = Array.from(files);
                var filesData = filesArray.map(file => {
                    return {
                        name: file.name,
                        type: file.type,
                        size: file.size
                    };
                });

                // Zapisywanie plików w sessionStorage
                sessionStorage.setItem('uploadPhoto', JSON.stringify(filesData));

                // Konwertowanie plików na Base64
                filesArray.forEach(file => {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        // Zapisz Base64 w sessionStorage
                        var uploadedFilesBase64 = sessionStorage.getItem('uploadedFilesBase64') ? JSON.parse(sessionStorage.getItem('uploadedFilesBase64')) : [];
                        uploadedFilesBase64.push(e.target.result);
                        sessionStorage.setItem('uploadedFilesBase64', JSON.stringify(uploadedFilesBase64));
                    }
                    reader.readAsDataURL(file);
                });
            }
        }

        // Funkcja pobiera dane z sesji do zmiennej po załadowaniu okna
        window.onload = function () {
            var uploadedFilesData = sessionStorage.getItem('uploadPhoto');
            var uploadedFilesBase64 = sessionStorage.getItem('uploadedFilesBase64');

            let imageContainer = document.getElementById('imageContainer');

            if (uploadedFilesBase64) {
                var base64Files = JSON.parse(uploadedFilesBase64);

                // Wyświetlenie pierwszego obrazu w imagePreview
                if (base64Files.length > 0) {
                    imagePreview.src = base64Files[0]; // Zakładamy, że chcemy wyświetlić tylko pierwszy obraz
                    imagePreview.style.display = 'block'; // Upewnij się, że obraz jest widoczny
                }
            }

            if (uploadedFilesData) {
                var uploadedFiles = JSON.parse(uploadedFilesData); // zamienia tekst na obiekt
                // Utworzenie nowej listy plików
                var newFilesList = new DataTransfer();

                uploadedFiles.forEach(file => {
                    // Utworzenie nowego pliku i dodanie go do listy plików
                    var newFile = new File([], file.name, { type: file.type, size: file.size });
                    newFilesList.items.add(newFile);
                });

                // Przypisanie nowej listy plików do pola input
                filesInput.files = newFilesList.files;

                imageContainer.style.width = '150px';
                imageContainer.style.height = '150px';
            }

        };




        // funkcja odpowiedzialna za wyświetlenie zdjęcia w img
        function previewImage(event) {

            imageContainer.style.width = '150px';
            imageContainer.style.height = '150px';

            const file = event.target.files[0]; // pobierz pierwszy plik
            const reader = new FileReader();

            reader.onload = function (e) {

                const img = document.getElementById('imagePreview');
                img.src = e.target.result; // ustaw źródło obrazu
                img.style.display = 'block'; // wyświetl obraz
            }

            if (file) {
                reader.readAsDataURL(file); // konwertuj plik na URL
            }
        }

    </script>
}